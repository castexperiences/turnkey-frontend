.input-wrapper {
	margin-bottom: 1rem;
}

.big-text-input {
	height: 6vh;
	text-align: center;
	font-size: x-large;
}

.medium-text-input {
	font-size: large;
	font-weight: 900;
	text-transform: uppercase;
}

.ui-hidden-accessible {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px,1px,1px,1px);
}

// Form STYLING 1
.form-group {
	label {
		display: block;
		font-size: rem-calc(15);
		font-weight: 600;
		margin-bottom: 6px;

		&.req:after {
			content: '*';
			color: theme-color($danger);
		}
	}

    // Textarea
    textarea.form-control {
        border-radius: 5px;
    }


	// Input fields
	.form-control {
		color: $brand-black;
		min-height: 40px;

		&::placeholder {
			color: $gray-400;
		}

		// form has error
		&.is-invalid-input {
			border-color: #ff798b;
			background-color: #f9e8ea;
		}

		// upper
		&.upper:not(:placeholder-shown) {
			text-transform: uppercase;
		}

	}

	// Inline Field w/ Button
	.inline-field-button {

		.form-group {
			position: relative;
			display: inline-block;
			vertical-align: middle;
			width: 100%;
			max-width: 400px;

			input {
				width: 100%;
				border-radius: 7px;
				height: 50px;
				padding-right: 60px + 13px;
				&::placeholder {
					color: $gray-400;
					font-weight: 500;
				}
			}

			.btn {
				position: absolute;
				margin: 5px;
				right: 0;
				top: 0;
				bottom: 0;
				border-radius: 7px;
				height: 40px;
				width: 55px;
				padding-top: 2px;
				padding-bottom: 0px;
			}

		}
	}

	// Error messages
	.form-error {
		color: theme-color("primary");
		font-size: rem-calc(13);
		font-weight: 600;
	}

}

// Checkbox Styling
// Material checkbox from: https://codepen.io/hansmaad/pen/qaGrQL
.checkbox-wrapper {
	// *****
	// * VARIABLES
	// *****
	$md-checkbox-checked-color: rgb(50, 182, 223);
	$md-checkbox-border-color: rgba(0, 0, 0, 0.54);
	$md-checkbox-border-color-disabled: rgba(0, 0, 0, 0.26);
	$md-checkbox-checked-color-disabled: rgba(0, 0, 0, 0.26);

	$md-checkbox-margin: 1em 0;
	$md-checkbox-size: 1.25em;
	$md-checkbox-padding: .25em;
	$md-checkbox-border-width: 2px;
	$md-checkbox-border-radius: 0.125em;
	$md-checkmark-width: 0.125em;
	$md-checkmark-color: #fff;
	$md-checkbox-label-padding: .75em;

	position: relative;
	margin: $md-checkbox-margin;
	text-align: left;
    &:not(.with-label) {
        width: $md-checkbox-size !important;
    }
	height: $md-checkbox-size !important;

    &.with-label {
        width: 100% !important;
        margin: 0 0 0.6em !important;
    }

	&.checkbox-inline {
		display: inline-flex; // changed from inline-block to vertically align on <table> rows
	}

	label {
		user-select: none;
		cursor: pointer;
		display: inline;
		line-height: $md-checkbox-size;
		vertical-align: top;
		clear: both;
		padding-left: 1px;
		&:not(:empty) {
			padding-left: $md-checkbox-label-padding;
		}

		&:before, &:after {
			content: "";
			position: absolute;
			left: 0;
			top: 1px;
		}

		&:before {
			// box
			width: $md-checkbox-size;
			height: $md-checkbox-size;
			background: #fff;
			border: $md-checkbox-border-width solid $md-checkbox-border-color;
			border-radius: $md-checkbox-border-radius;
			cursor: pointer;
			transition: background .3s;
		}

		&:after {
			// checkmark
		}
	}

	input[type="checkbox"] {
		outline: 0;
		visibility: hidden;
		width: $md-checkbox-size;
		margin: 0;
		display: block;
		float: left;
		font-size: inherit;

		&:checked {
			+ label:before{
				background: $md-checkbox-checked-color;
				border:none;
			}
			+ label:after {

				$md-checkmark-size: $md-checkbox-size - 2 * $md-checkbox-padding;

				transform: translate($md-checkbox-padding, ($md-checkbox-size / 2) - ($md-checkmark-size / 2.6)) rotate(-45deg);
				width: $md-checkmark-size;
				height: $md-checkmark-size / 2;

				border: $md-checkmark-width solid $md-checkmark-color;
				border-top-style: none;
				border-right-style: none;
			}
		}

		&:disabled {
			+ label:before{
				border-color: $md-checkbox-border-color-disabled;
			}
			&:checked {
				+ label:before{
					background: $md-checkbox-checked-color-disabled;
				}
			}
		}
	}

}

// Add / Remove Button Checkbox Style
.select-button-control {
    & > label {
        position: relative;
        background-color: theme-color("primary");
        border-radius: $btn-border-radius;
        padding: $btn-padding-y $btn-padding-x;
        color: #fff;
        transition: $transitions;
        &:hover {
            cursor: pointer;
            background-color: theme-color-level("primary", 2);
        }
    }
    & > input:checked + label {
        position: relative;
        background-color: theme-color("success");
        &:before {
            @include fa('\f00c');
            vertical-align: middle;
            @include font-size(12);
            padding-right: 4px;
        }
    }
}

// Radio Buttons
.inline-options {
	.option {

		padding-left: 16px;

		&:first-child {
			padding-left: 0;
		}

		input[type="radio"] {
			display: none;
			visibility: hidden;
			left: -9999px;

			& + label {
				background-color: $gray-500;
				color: #fff;
				border: none;
				padding: 20px;

				&:hover {
					cursor: pointer;
					background-color: $gray-600;
				}
			}

			&:checked + label {
				// checked state label
				background-color: $brand;

				&:hover {
					background-color: darken($brand, 3%);
				}
			}

		}
	}
}

// Radio Yes / No Toggle
// Inspired by: https://codepen.io/Moiety/pen/cwGmo
// Add .toggle-inline to label to force inline style
// Usage: wrap input and span inside the label
.form-group.toggle-yn {
    label {
        display: inline-block;
        position: relative;
        padding: 13px 3px 13px 0;
        overflow: hidden;
        line-height: 22px;
        user-select: none;
        transition: all .2s ease;

        input {
            position: absolute;
            bottom: 100%;
            z-index: -1;
        }

        span {
            position: relative;
            display: block;
            margin-top: 6px;
            width: 102px;
            height: 42px;
            border: 1px solid #e76e72;
            border-radius: 5px;
            box-shadow: inset 0 0 2px #e76e72;
            vertical-align: middle;
            background-color: #f0a9ab;
            transition: all .2s ease;

            &::before {
                position: absolute;
                top: 50%;
                left: 25%;
                transform: translate(-50%, -50%);
                color: #292929 ;
                font-size: 16px;
                content: 'no';

            }

            &::after {
                display: block;
                position: absolute;
                top: 50%;
                left: 50%;
                width: 45px;
                height: 30px;
                border-radius: 3px;
                box-shadow: 0 1px 2px #e66268;
                transform: translateY(-50%);
                background-color: #ffffff;
                background-image: radial-gradient(ellipse at center, #eee 52%,rgba(255,255,255,0) 53%), radial-gradient(ellipse at center, #cfcfcf 52%, rgba(255,255,255,0) 53%);
                background-position: 20px 12px, 19px 11px;
                background-repeat: no-repeat;
                background-size: 7px 8px, 9px 9px;
                content: '';
                transition: all .2s ease;
            }
        }

        &.toggle-inline {
            span {
                display: inline-block;
                margin: -10px 0 -10px 20px;
            }
        }

        input:checked + span {
            border-color: theme-color-level("success", 4);
            box-shadow: inset 0 0 2px theme-color-level("success", 4);
            background-color: theme-color-level("success", -4);

            &::before {
                content: 'yes';
                left: 75%;
            }

            &::after {
                left: 5px;
                box-shadow: 0 1px 2px theme-color-level("success", 4);
            }
        }

        input:focus + span {
            box-shadow: 0 0 0 3px #bdd7f7;
        }
    }
}

// Address Lookup
// Postcode Select
.postcode-select {
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;

	&-btn {
		align-self: flex-end;
		flex-grow: 1;

		.btn {
			width: 100%;
		}

		i {
			font-size: rem-calc(11);
		}
	}

	&-input {
		padding-right: 8px;
		flex-grow: 3;
	}

	&-dropdown {
		flex-grow: 3;
		max-width: 100%;
	}

}

.address-lookup-error {
	font-style: italic;
	font-weight: 600;
	color: #fb8c00;
}

.ng-dropdown-panel .ng-dropdown-panel-items {
	max-height: 262px !important;
}

.ng-select {
	&.ng-invalid:not(.ng-untouched) > .ng-select-container {
		background-color: lighten(theme-color-level("danger", -10), 3%);
	}
}

.order-count-selection {
	padding-left: 0;
	padding-right: 0;
}

.tooltip-text {
	margin-bottom: 0;
	margin-top: 0;
	font-size: .875rem;
}

// Input type[number]
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
	-webkit-appearance: none;
	margin: 0;
}


// Portal Styling
// Form Blocker - Used to block a form, row or column
.form-blocker {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background: rgba(0,0,0,0.5);
	z-index: 100;
	& ~ div {
		opacity: 0.4 !important;
		filter: grayscale(1);
	}
}


.form-blocked {
	position: relative;
	transition: filter 0.3s ease, opacity 0.3s ease;
	&:before {
		content: '';
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background: rgba(0,0,0,0.5);
		z-index: 100;
	}
	& * {
		opacity: 0.9 !important;
		filter: grayscale(1);
		pointer-events: none;
		user-select: none;
	}
}
.row-blocked {
	opacity: 0.3 !important;
	filter: grayscale(1);
	pointer-events: none;
	user-select: none;
	> * {
		opacity: 0.3 !important;
		pointer-events: none;
		user-select: none;
	}
}

.blurry-text {
	filter: blur(2px);
}
.shimmer {
	color:white;
	background: #acacac -webkit-gradient(linear, 100% 0, 0 0, from(#acacac), color-stop(0.5, #ffffff), to(#acacac));
	background-position: -4rem top; /*50px*/
	background-repeat: no-repeat;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	-webkit-animation-name: shimmer;
	-webkit-animation-duration: 1.8s;
	-webkit-animation-iteration-count: infinite;
	-webkit-background-size: 4rem 100%; /*50px*/

}
@-webkit-keyframes shimmer {
	0% {
		background-position: -4rem top; /*50px*/
	}

	70% {
		background-position: 12.5rem top; /*200px*/
	}

	100% {
		background-position: 12.5rem top; /*200px*/
	}
}

.ta-medium-height {
	height: 6em;
}
